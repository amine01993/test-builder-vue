import{D as A,u as C,r as c,c as d,G as z,H as B}from"./index-DgVFOuIu.js";import{u as b,T as P,g as L,d as G,c as q,q as S,w as I,a as J,l as D,o as M,b as N,s as K}from"./firestore-CKAN35Ge.js";const j=A("fetch",()=>{const y="http://127.0.0.1:5001/test-builder-api/us-central1/api";async function v(){var o;const{user:s}=C(),u=new Headers;u.append("Content-Type","application/json");const a=await((o=s.value)==null?void 0:o.getIdToken(!1));return a&&u.append("Authorization",a),u}async function f(s,u={}){const a=new URLSearchParams(u);let o=y+s;a.size>0&&(o+="?"+a.toString());const m=await v();return(await fetch(o,{headers:m})).json()}async function l(s,u={}){const a=y+s,o=await v();return(await fetch(a,{headers:o,method:"POST",body:JSON.stringify(u)})).json()}return{get:f,post:l}}),X=A("userTestService",()=>{const{db:y}=b();let v,f=c(),l=c(),s=new Map;const u=c(!0),a=c(180),o=c(""),m=c(""),w=c(),R=c(),g=c();let _=null;const U=25;async function E(){const{user:e}=C();e.value&&await Promise.all([z(e.value,{displayName:o.value}),B(e.value,m.value)])}async function F(e){const{get:r}=j(),t=await r("/test",{testId:e,displayName:o.value,email:m.value});if(l.value=t.test,v=t.userTestId,l.value&&(a.value=l.value.time_limit,a.value>0)){let n=setInterval(()=>{a.value--,a.value===0&&(clearInterval(n),n=void 0)},1e3);return n}}async function H(e){var p,i;const{post:r}=j();s=new Map,v&&s.set("user_test_id",[v]),(p=l.value)!=null&&p.id&&s.set("test_id",[l.value.id]);for(const[T,h]of e)h.toString()!==""&&(s.has(T)?(i=s.get(T))==null||i.push(h.toString()):s.set(T,[h.toString()]));const t=Object.fromEntries(s),n=await r("/finish-test",t);return n.started_at=P.fromMillis(n.started_at._seconds*1e3),n.ended_in=P.fromMillis(n.ended_in._seconds*1e3),n}function O(e){f.value=e}async function Q(e){const{db:r}=b();if(!f.value){const t=await L(G(r,"user_tests",e));t.exists()&&(f.value=t.data(),f.value.id=t.id)}}async function k(e){if(w.value===e)return;w.value=e;const r=q(y,"user_tests"),t=S(r,I("test.user_id","==",e)),n=await J(t);R.value=n.data().count;const p=S(r,I("test.user_id","==",e),M("started_at","desc"),D(U)),i=await N(p);g.value=i.docs.map(T=>{const h=T.data();return h.id=T.id,h}),_=i.docs.length===0?null:i.docs[i.docs.length-1]}async function x(){if(!g.value||!_)return;const e=q(y,"user_tests"),r=S(e,I("test.user_id","==",w.value),M("started_at","desc"),K(_),D(U)),t=await N(r),n=t.docs.map(p=>{const i=p.data();return i.id=p.id,i});_=t.docs.length===0?null:t.docs[t.docs.length-1],g.value=g.value.concat(n)}return{requestUserInfo:d(()=>u),displayName:d(()=>o),email:d(()=>m),test:d(()=>l),time_limit:d(()=>a),testReport:d(()=>f),userTestCount:d(()=>R),userTests:d(()=>g),updateUserInfo:E,initTest:F,sendReport:H,setTestReport:O,initTestReport:Q,loadUserTests:k,loadMoreUserTests:x}});export{X as u};
